######################################################################
##			FreeRadius Configration	Edited By Mr.Ahmed Nour			##
######################################################################
#
#
#
######################################################################
##				Server Listen Authorization && Accounting			##
######################################################################

server default {

listen {
	type = auth
	ipaddr = *
	port = 0
	limit {
	      max_connections = 0
	      lifetime = 0
	      idle_timeout = 30
	}
}

listen {
	ipaddr = *
	port = 0
	type = acct
	limit {
	}
}

######################################################################
##						Authorization Section						##
######################################################################

authorize {

	# login user by rest api

	loginUserViaRest

	# set encryption method for user if password present

	if(control:Auth-Type != "Reject" && control:Cleartext-Password){

      if(%{#User-Password} == 0){
         update{control:Auth-Type := 'Reject'}
      }

		if(MS-CHAP-Challenge){

			   update{control:Auth-Type := 'mschap'}

		}elsif(User-Password){
      
			   update{control:Auth-Type := 'pap'}

		}elsif(CHAP-Challenge){

			   update{control:Auth-Type := 'chap'}  
		}

		 
	} # end of encryption
} # end of authorize

######################################################################
##					Authentication Modules Section					##
######################################################################

authenticate {
	Auth-Type rest {
      loginUserViaRest
    }
	Auth-Type PAP {
		pap
	}
	Auth-Type CHAP {
		chap
	}
	Auth-Type mschap {
		mschap
	}
}

post-auth {  
Post-Auth-Type REJECT {
	update reply {
          Reply-Message = reply:Reply-Message
    }
}
}

######################################################################
##						Pre-accounting Section						##
######################################################################

preacct {
	acct_unique
}

######################################################################
##						Accounting Section							##
######################################################################

accounting {
	## Save Accounting Data On MySQL Database ##
	
	#if (Acct-Status-Type == Start) {  
   #}

	update {
	     # get user id
        reply:User-Id := "%{redis:HGET %{NAS-Identifier}_%{User-Name} user_id}"
        reply:Network-Id := "%{redis:HGET %{NAS-Identifier}_%{User-Name} network_id}"
        reply:Userable-Type := "%{redis:HGET %{NAS-Identifier}_%{User-Name} userable_type}"
    }

    if (Acct-Status-Type == Interim-Update) {

		  # send broadband users to laravel
        if ("%{redis:HGET %{NAS-Identifier}_%{User-Name} connection_type}" == 'PPP') {
           accountingForPPPUsers
        }
    }

	sql
	if (Acct-Status-Type == Stop) {
	   # delete key from redis cache
	   update {
            control:Tmp-Integer-0 := "%{redis:DEL %{NAS-Identifier}_%{User-Name}}"
        }
	}
	attr_filter.accounting_response
}


######################################################################
##						Session Section								##
######################################################################

session {
#	sql
}

}
